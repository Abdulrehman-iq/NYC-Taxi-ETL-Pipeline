version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: rideflow
      POSTGRES_PASSWORD: rideflow
      POSTGRES_DB: rideflow_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  airflow:
    image: apache/airflow:2.3.0
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://rideflow:rideflow@postgres/rideflow_db
      AIRFLOW__CORE__FERNET_KEY: W7wd2AOALxgTuK3sR3T3XKxf9zoCmEaKJIJhJQ64qJM=
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__WEBSERVER__RBAC: "False"
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/usr/local/airflow/dags
      - ./spark_jobs:/usr/local/airflow/spark_jobs
      - ./data:/usr/local/airflow/data
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 10s
      retries: 3

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    environment:
      - CLUSTER_NAME=rideflow-hadoop
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    ports:
      - "9870:9870"
      - "9000:9000"
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - ./data:/data

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    depends_on:
      - namenode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - hadoop_datanode:/hadoop/dfs/data

  spark-master:
    image: bitnami/spark:3.3
    container_name: spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8081:8080"
    depends_on:
      - namenode
      - datanode

  spark-worker:
    image: bitnami/spark:3.3
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2g
      - SPARK_WORKER_CORES=2
    depends_on:
      - spark-master
      - namenode
      - datanode
    volumes:
      - ./spark_jobs:/opt/spark_jobs
      - ./data:/data

  spark:
    image: bitnami/spark:3.3
    container_name: spark
    environment:
      - SPARK_MODE=client
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
      - namenode
      - datanode
    ports:
      - "4040:4040"
    volumes:
      - ./spark_jobs:/opt/spark_jobs
      - ./data:/data
      - hadoop_conf:/opt/hadoop/etc/hadoop
      - ./spark_jobs/postgresql-42.7.4.jar:/opt/spark/jars/postgresql-42.7.4.jar
    command: tail -f /dev/null

  superset:
    image: apache/superset
    environment:
      - SUPERSET_LOAD_EXAMPLES=no
      - SUPERSET_DB_URI=postgresql+psycopg2://rideflow:rideflow@postgres:5432/rideflow_db
    ports:
      - "8088:8088"
    depends_on:
      - postgres
    command: >
      /bin/sh -c "
        superset db upgrade &&
        superset init &&
        superset run -p 8088 --with-threads --reload --debugger
      "

  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"

volumes:
  pgdata:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_conf: